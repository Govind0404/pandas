diff --git a/pandas/tests/groupby/test_weighted_mean.py b/pandas/tests/groupby/test_weighted_mean.py
index 791e9f3bbe..6f7574a135 100644
--- a/pandas/tests/groupby/test_weighted_mean.py
+++ b/pandas/tests/groupby/test_weighted_mean.py
@@ -104,12 +104,12 @@ class TestGroupByWeightedMean:
 
     def test_non_numeric_raises(self):
         df = pd.DataFrame({"g": ["A", "A"], "v": ["x", "y"], "w": [1.0, 2.0]})
-        with pytest.raises(TypeError, match=".*"):
+        with pytest.raises(TypeError):
             _ = df.groupby("g")["v"].weighted_mean(weights="w")
 
     def test_length_mismatch_raises(self):
         df = pd.DataFrame({"g": ["A", "A", "B"], "v": [1.0, 2.0, 3.0]})
-        with pytest.raises(ValueError, match=".*"):
+        with pytest.raises(ValueError):
             _ = df.groupby("g")["v"].weighted_mean(weights=[1.0, 2.0])
 
     def test_weights_array_like_numpy(self):
@@ -135,7 +135,7 @@ class TestGroupByWeightedMean:
             }
         )
         gobj = df.groupby("g")
-        assert hasattr(gobj, "weighted_mean") and callable(gobj.weighted_mean)
+        assert hasattr(gobj, "weighted_mean") and callable(getattr(gobj, "weighted_mean"))
 
         # DataFrameGroupBy over a single-column DataFrame should return a Series
         gb_df = df[["v"]].groupby("g")
@@ -161,3 +161,26 @@ class TestGroupByWeightedMean:
         )
         tm.assert_series_equal(out_none, expected)
         tm.assert_series_equal(out_true, expected)
+
+    def test_dataframe_groupby_multi_column_raises_notimplemented(self):
+        df = pd.DataFrame(
+            {
+                "g": ["A", "A", "B", "B"],
+                "v": [10.0, 20.0, 5.0, 15.0],
+                "w": [1.0, 3.0, 2.0, 2.0],
+            }
+        )
+        gb = df.groupby("g")[ ["v", "w"] ]
+        with pytest.raises(NotImplementedError):
+            _ = gb.weighted_mean(weights="w")
+
+    def test_non_numeric_weights_raises(self):
+        df = pd.DataFrame(
+            {
+                "g": ["A", "A", "B", "B"],
+                "v": [10.0, 20.0, 5.0, 15.0],
+            }
+        )
+        bad_w = ["a", "b", "c", "d"]
+        with pytest.raises(TypeError):
+            _ = df.groupby("g")["v"].weighted_mean(weights=bad_w)
diff --git a/test.sh b/test.sh
new file mode 100644
index 0000000000..40db5d7f44
--- /dev/null
+++ b/test.sh
@@ -0,0 +1,22 @@
+#!/bin/bash
+set -euo pipefail
+
+echo "Running tests..."
+python -V
+
+case "$1" in
+ base)
+    # Run a couple of stable tests that should pass at base commit
+    pytest -q \
+      pandas/tests/frame/test_constructors.py::TestDataFrameConstructors::test_construct_from_list_of_datetimes \
+      pandas/tests/series/methods/test_nunique.py::test_nunique
+    ;;
+ new)
+   # Run the newly added tests that should fail before implementation
+   pytest -q pandas/tests/groupby/test_weighted_mean.py
+   ;;
+ *)
+   echo "Usage: ./test.sh {base|new}"
+   exit 1
+   ;;
+esac
